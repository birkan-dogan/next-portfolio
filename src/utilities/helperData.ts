const projects = [
  {
    title: "Converso",
    description: "A real-time chat application for seamless communication.",
    longDescription:
      "Converso is a modern real-time chat application designed for instant messaging and seamless communication. Built with Next.js and Socket.io, it provides a responsive and intuitive user interface for one-on-one and group conversations.\n\nThe application features real-time message delivery, user authentication, online status indicators, and message history. With a focus on user experience, Converso ensures fast message delivery and a clean, distraction-free interface.",
    features: [
      "Real-time messaging with Socket.io",
      "User authentication and authorization",
      "Online/offline status indicators",
      "Message history and persistence",
      "Responsive design for all devices",
      "Group chat functionality",
      "Typing indicators",
    ],
    challenges:
      "Implementing real-time functionality while maintaining optimal performance was the main challenge. We utilized Socket.io for WebSocket connections and implemented efficient message queuing. Another challenge was ensuring message delivery reliability and handling network disconnections gracefully.",
    image: "/projectImg/chatApp.png",
    images: [
      "/projectImg/chatApp.png",
      "https://images.unsplash.com/photo-1611746872915-64382b5c76da?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1587825140708-dfaf72ae4b04?auto=format&fit=crop&w=800",
    ],
    tech: ["Next.js", "Socket.io", "MongoDB", "TailwindCSS"],
    github: "https://github.com/birkan-dogan/chat-app",
    live: "https://converso-app.vercel.app/",
    slug: "converso",
  },
  {
    title: "Blog App",
    description: "A feature-rich blogging platform with Firebase integration.",
    longDescription:
      "Blog App is a comprehensive blogging platform built with modern web technologies. It allows users to create, edit, and publish blog posts with rich text formatting, image uploads, and category management.\n\nUtilizing Firebase for backend services, the application provides real-time updates, secure authentication, and cloud storage for media files. The platform features a clean reading experience with responsive design and optimized performance.",
    features: [
      "Rich text editor for content creation",
      "Image upload and management",
      "Category and tag system",
      "User authentication with Firebase",
      "Real-time post updates",
      "Comment system",
      "SEO-friendly URLs",
    ],
    challenges:
      "One of the main challenges was implementing a flexible rich text editor that could handle various content formats while maintaining clean HTML output. We also focused on optimizing image loading and implementing lazy loading for better performance.",
    image: "/projectImg/blogApp.png",
    images: [
      "/projectImg/blogApp.png",
      "https://images.unsplash.com/photo-1499750310107-5fef28a66643?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "Firebase", "TailwindCSS", "React Router"],
    github: "https://github.com/birkan-dogan/fire-blog",
    live: "https://blogonfire.vercel.app/",
    slug: "blog-app",
  },
  {
    title: "Admin Dashboard",
    description:
      "A comprehensive business analytics dashboard with data visualization.",
    longDescription:
      "Admin Dashboard is a powerful business intelligence tool designed for data-driven decision making. It provides comprehensive analytics, interactive charts, and real-time monitoring capabilities for businesses of all sizes.\n\nBuilt with React and featuring advanced data visualization libraries, the dashboard offers customizable widgets, role-based access control, and detailed reporting features. The responsive design ensures seamless experience across all devices.",
    features: [
      "Interactive data visualization",
      "Real-time analytics and monitoring",
      "Customizable dashboard widgets",
      "User management and role-based access",
      "Report generation and export",
      "Responsive design",
      "Dark mode support",
    ],
    challenges:
      "The main challenge was handling large datasets efficiently while maintaining smooth interactions and animations. We implemented data pagination, virtual scrolling, and efficient state management to ensure optimal performance even with thousands of data points.",
    image: "/projectImg/dashboard.png",
    images: [
      "/projectImg/dashboard.png",
      "https://images.unsplash.com/photo-1551288049-bebda4e38f71?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1460925895917-afdab827c52f?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "Chart.js", "Material-UI", "Redux"],
    github: "https://github.com/birkan-dogan/react-admin-dashboard",
    live: "https://business-dashboard-project.vercel.app/",
    slug: "admin-dashboard",
  },
  {
    title: "Kubbella",
    description: "A modern restaurant website with online ordering system.",
    longDescription:
      "Kubbella is a modern restaurant website featuring an elegant design and comprehensive online ordering system. The platform provides customers with an intuitive menu browsing experience, easy ordering process, and order tracking capabilities.\n\nBuilt with Next.js for optimal performance and SEO, the website features high-quality food photography, detailed menu descriptions, and a seamless checkout experience. The responsive design ensures perfect functionality across all devices.",
    features: [
      "Interactive menu with categories",
      "Online ordering system",
      "Shopping cart functionality",
      "Order tracking",
      "Responsive design",
      "Image optimization",
      "Contact and reservation system",
    ],
    challenges:
      "Creating an engaging user experience while maintaining fast load times was crucial. We implemented lazy loading for images, optimized assets, and used Next.js image optimization. Another challenge was designing an intuitive ordering flow that minimized steps while collecting necessary information.",
    image: "/projectImg/kubbella.png",
    images: [
      "/projectImg/kubbella.png",
      "https://images.unsplash.com/photo-1504674900247-0877df9cc836?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1414235077428-338989a2e8c0?auto=format&fit=crop&w=800",
    ],
    tech: ["Next.js", "React", "TailwindCSS", "Framer Motion"],
    github: "https://github.com/birkan-dogan/kubbella",
    live: "https://kubbella.vercel.app/",
    slug: "kubbella",
  },
  {
    title: "LinSoft",
    description: "A professional landing page for software services.",
    longDescription:
      "LinSoft is a modern, professional landing page designed for software service companies. It showcases services, features, pricing plans, and includes a contact section for potential clients.\n\nThe page features smooth animations, responsive design, and optimized performance. Built with React and styled with Tailwind CSS, it provides an engaging user experience with clear call-to-actions and compelling content presentation.",
    features: [
      "Hero section with animations",
      "Service showcases",
      "Pricing tables",
      "Contact form",
      "Responsive design",
      "Smooth scrolling",
      "SEO optimization",
    ],
    challenges:
      "Balancing visual appeal with performance was key. We implemented intersection observer for scroll animations, optimized images, and used CSS animations efficiently. Another challenge was creating a design that stood out while maintaining professionalism.",
    image: "/projectImg/linsoft.png",
    images: [
      "/projectImg/linsoft.png",
      "https://images.unsplash.com/photo-1460925895917-afdab827c52f?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1522542550221-31fd19575a2d?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "TailwindCSS", "Framer Motion", "React Router"],
    github: "https://github.com/birkan-dogan/landingPage",
    live: "https://linsoft.vercel.app/",
    slug: "linsoft",
  },
  {
    title: "Movie App",
    description: "A movie discovery app with TMDb API integration.",
    longDescription:
      "Movie App is a comprehensive movie discovery platform that allows users to browse, search, and explore movies and TV shows. Powered by The Movie Database (TMDb) API, it provides detailed information about movies including ratings, cast, trailers, and reviews.\n\nThe application features a clean, Netflix-inspired interface with smooth navigation, advanced filtering options, and personalized recommendations. Users can create watchlists and rate movies they've watched.",
    features: [
      "Movie search and discovery",
      "Detailed movie information",
      "Trending and popular sections",
      "Genre-based filtering",
      "Trailer playback",
      "User ratings and reviews",
      "Responsive design",
    ],
    challenges:
      "Implementing efficient API calls while managing rate limits was crucial. We implemented caching strategies and debounced search to optimize API usage. Another challenge was creating an engaging UI that could display large amounts of data without overwhelming users.",
    image: "/projectImg/movie-app.jpg",
    images: [
      "/projectImg/movie-app.jpg",
      "https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1536440136628-849c177e76a1?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "TMDb API", "React Router", "CSS3"],
    github: "https://github.com/birkan-dogan/movie-app",
    live: "https://movie-app-liart-eta.vercel.app/",
    slug: "movie-app",
  },
  {
    title: "Recipe App",
    description: "A recipe discovery platform with styled-components.",
    longDescription:
      "Recipe App is a delightful recipe discovery platform that helps users find and save their favorite recipes. With integration to recipe APIs, users can search for recipes by ingredients, cuisine type, dietary restrictions, and more.\n\nBuilt with React and styled-components, the application features a beautiful, appetizing design with high-quality food photography. Users can view detailed cooking instructions, ingredient lists, and nutritional information.",
    features: [
      "Recipe search by ingredients",
      "Dietary filter options",
      "Detailed cooking instructions",
      "Ingredient lists and measurements",
      "Nutritional information",
      "Save favorite recipes",
      "Responsive design",
    ],
    challenges:
      "Creating an intuitive search experience that could handle various search criteria was challenging. We implemented multi-filter functionality and optimized the search algorithm for better results. Another challenge was presenting complex recipe data in a digestible format.",
    image: "/projectImg/recipe-app.jpg",
    images: [
      "/projectImg/recipe-app.jpg",
      "https://images.unsplash.com/photo-1556910103-1c02745aae4d?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1466637574441-749b8f19452f?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "Styled Components", "Recipe API", "React Router"],
    github: "https://github.com/birkan-dogan/recipe-app-with-styledcomponents",
    live: "https://recipe-app-with-styledcomponents.vercel.app/",
    slug: "recipe-app",
  },
  {
    title: "NFT-Site",
    description: "An NFT marketplace landing page with modern design.",
    longDescription:
      "NFT-Site is a modern landing page designed for an NFT marketplace. It features a sleek, futuristic design that captures the essence of the digital art and blockchain space. The page showcases NFT collections, trending items, and provides information about the platform.\n\nBuilt with modern web technologies, the site features smooth animations, gradient effects, and a responsive layout that works seamlessly across all devices. The design emphasizes visual appeal while maintaining excellent usability.",
    features: [
      "NFT showcase sections",
      "Animated hero section",
      "Trending collections",
      "Artist profiles",
      "Responsive design",
      "Modern gradient effects",
      "Call-to-action sections",
    ],
    challenges:
      "Creating a visually stunning design while maintaining performance was the primary challenge. We optimized animations using CSS transforms and GPU acceleration. Another challenge was designing a layout that could effectively showcase diverse NFT artwork.",
    image: "/projectImg/nft-site.png",
    images: [
      "/projectImg/nft-site.png",
      "https://images.unsplash.com/photo-1639762681485-074b7f938ba0?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1620321023374-d1a68fbc720d?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "TailwindCSS", "Framer Motion", "Web3"],
    github: "https://github.com/birkan-dogan/nft-site",
    live: "https://nft-site-coral.vercel.app/",
    slug: "nft-site",
  },
  {
    title: "Fire-Contact",
    description: "A contact management app with Firebase backend.",
    longDescription:
      "Fire-Contact is a comprehensive contact management application that allows users to store, organize, and manage their contacts efficiently. Built with Firebase as the backend, it provides real-time synchronization across devices and secure data storage.\n\nThe application features a clean, intuitive interface for adding, editing, and deleting contacts. Users can search contacts, add notes, and organize contacts with tags and categories. All data is securely stored in Firebase with user authentication.",
    features: [
      "Add, edit, delete contacts",
      "Search and filter functionality",
      "Contact categorization",
      "Real-time sync with Firebase",
      "User authentication",
      "Responsive design",
      "Export contacts feature",
    ],
    challenges:
      "Implementing efficient real-time synchronization without overwhelming the database was crucial. We used Firebase's real-time listeners strategically and implemented local caching. Another challenge was creating an intuitive UI for managing large contact lists.",
    image: "/projectImg/fire-contact.jpg",
    images: [
      "/projectImg/fire-contact.jpg",
      "https://images.unsplash.com/photo-1516387938699-a93567ec168e?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1423666639041-f56000c27a9a?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "Firebase", "TailwindCSS", "React Router"],
    github: "https://github.com/birkan-dogan/firecontact-app",
    live: "https://firecontact-app-tau.vercel.app/",
    slug: "fire-contact",
  },
  {
    title: "Weather App",
    description: "A weather forecast application with OpenWeather API.",
    longDescription:
      "Weather App is a comprehensive weather forecast application that provides current weather conditions and forecasts for locations worldwide. Powered by the OpenWeather API, it delivers accurate and up-to-date weather information with a beautiful, intuitive interface.\n\nThe application displays temperature, humidity, wind speed, and other weather metrics. Users can search for any city, view hourly and daily forecasts, and get weather alerts. The responsive design ensures a great experience on all devices.",
    features: [
      "Current weather conditions",
      "5-day weather forecast",
      "Hourly predictions",
      "City search functionality",
      "Weather alerts",
      "Temperature unit conversion",
      "Responsive design",
    ],
    challenges:
      "Presenting complex weather data in an easily digestible format was the main challenge. We designed intuitive visualizations and used icons effectively. Another challenge was handling API rate limits and implementing efficient caching strategies.",
    image: "/projectImg/weather-app.jpg",
    images: [
      "/projectImg/weather-app.jpg",
      "https://images.unsplash.com/photo-1592210454359-9043f067919b?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1504608524841-42fe6f032b4b?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "OpenWeather API", "CSS3", "Axios"],
    github: "https://github.com/birkan-dogan/weather-app",
    live: "https://weather-app-ten-taupe.vercel.app/",
    slug: "weather-app",
  },
  {
    title: "Add Tutorial",
    description: "A tutorial management system with CRUD operations.",
    longDescription:
      "Add Tutorial is a comprehensive tutorial management system that allows users to create, read, update, and delete programming tutorials. It's designed for educators and content creators who want to organize and share their educational content.\n\nThe application features a rich text editor for content creation, category management, and search functionality. Built with React and Firebase, it provides real-time updates and secure data storage. Users can organize tutorials by difficulty level, programming language, and topic.",
    features: [
      "Create and edit tutorials",
      "Rich text formatting",
      "Category and tag system",
      "Search functionality",
      "Tutorial ratings",
      "User authentication",
      "Responsive design",
    ],
    challenges:
      "Implementing a flexible content management system that could handle various content formats was challenging. We built a custom rich text editor and implemented efficient content storage. Another challenge was creating an intuitive categorization system.",
    image: "/projectImg/tutorial.jpg",
    images: [
      "/projectImg/tutorial.jpg",
      "https://images.unsplash.com/photo-1516116216624-53e697fedbea?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1517694712202-14dd9538aa97?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "Firebase", "React Router", "CSS3"],
    github: "https://github.com/birkan-dogan/tutorialapp",
    live: "https://tutorialapp-delta.vercel.app/",
    slug: "add-tutorial",
  },
  {
    title: "Random User",
    description: "A user directory app with Random User API integration.",
    longDescription:
      "Random User is a user directory application that generates and displays random user profiles using the Random User API. It features a table view with sorting, filtering, and search capabilities, making it easy to browse through user data.\n\nThe application demonstrates effective data handling, table manipulation, and responsive design. Users can sort by various fields, filter results, and view detailed user information. It's an excellent showcase of working with external APIs and managing tabular data.",
    features: [
      "Generate random user profiles",
      "Table view with sorting",
      "Advanced filtering options",
      "Search functionality",
      "Detailed user profiles",
      "Responsive table design",
      "Data pagination",
    ],
    challenges:
      "Creating a performant table that could handle large datasets while maintaining interactivity was the main challenge. We implemented virtual scrolling and efficient rendering techniques. Another challenge was designing a responsive table that worked well on mobile devices.",
    image: "/projectImg/randomuser.jpg",
    images: [
      "/projectImg/randomuser.jpg",
      "https://images.unsplash.com/photo-1522202176988-66273c2fd55f?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?auto=format&fit=crop&w=800",
    ],
    tech: ["JavaScript", "Random User API", "HTML5", "CSS3"],
    github: "https://github.com/birkan-dogan/random-user",
    live: "https://randomusers-tableversion.netlify.app/",
    slug: "random-user",
  },
  {
    title: "GitHub API",
    description: "A GitHub profile viewer with repository information.",
    longDescription:
      "GitHub API is a comprehensive GitHub profile viewer that allows users to search for and explore GitHub profiles and repositories. Using the GitHub API, it displays detailed information about users, their repositories, contributions, and activity.\n\nThe application features a clean interface for browsing repositories, viewing commit history, and analyzing user statistics. Users can search for any GitHub user, view their most popular repositories, and see language statistics. The responsive design ensures a great experience across all devices.",
    features: [
      "GitHub user search",
      "Repository listing and details",
      "Contribution statistics",
      "Language statistics",
      "Follower/following information",
      "Repository sorting and filtering",
      "Responsive design",
    ],
    challenges:
      "Working with the GitHub API's rate limits required careful planning and implementation of caching strategies. We implemented local storage caching and request throttling. Another challenge was presenting complex GitHub data in an intuitive and visually appealing way.",
    image: "/projectImg/githubapp.png",
    images: [
      "/projectImg/githubapp.png",
      "https://images.unsplash.com/photo-1618401471353-b98afee0b2eb?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1556075798-4825dfaaf498?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "GitHub API", "Chart.js", "CSS3"],
    github: "https://github.com/birkan-dogan/workingOnGithubAPI",
    live: "https://workingongithubapi.vercel.app/",
    slug: "github-api",
  },
  {
    title: "Breaking Bad API",
    description: "A Breaking Bad character database with API integration.",
    longDescription:
      "Breaking Bad API is a fun web application that showcases characters from the popular TV series Breaking Bad. Using the Breaking Bad API, it displays detailed information about characters including their appearances, occupations, and quotes.\n\nThe application features a card-based layout for browsing characters, detailed character profiles, and search functionality. Users can filter characters by season, status, and other attributes. It demonstrates effective API integration and responsive design principles.",
    features: [
      "Character gallery view",
      "Detailed character profiles",
      "Search and filter options",
      "Season-based filtering",
      "Character quotes",
      "Responsive grid layout",
      "Smooth animations",
    ],
    challenges:
      "Creating an engaging UI that could showcase the characters effectively while maintaining good performance was key. We implemented lazy loading for images and optimized component rendering. Another challenge was organizing the filtering system for an intuitive user experience.",
    image: "/projectImg/breakingbad.jpg",
    images: [
      "/projectImg/breakingbad.jpg",
      "https://images.unsplash.com/photo-1574375927938-d5a98e8ffe85?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1509347528160-9a9e33742cdb?auto=format&fit=crop&w=800",
    ],
    tech: ["React", "Breaking Bad API", "CSS3", "React Router"],
    github: "https://github.com/birkan-dogan/breaking-bad",
    live: "https://breakingbadapicast.netlify.app/",
    slug: "breaking-bad-api",
  },
  {
    title: "Bankist App",
    description: "A minimalist banking application with vanilla JavaScript.",
    longDescription:
      "Bankist App is a minimalist banking application built entirely with vanilla JavaScript. It simulates a modern banking interface where users can view balances, transfer money, request loans, and close accounts.\n\nThe application demonstrates advanced JavaScript concepts including array methods, date manipulation, and DOM manipulation. It features a clean, minimalist design with smooth animations and transitions. The app showcases modern JavaScript best practices and functional programming concepts.",
    features: [
      "View account balance and transactions",
      "Transfer money between accounts",
      "Request loans",
      "Close account functionality",
      "Transaction history with dates",
      "Currency formatting",
      "Auto-logout for security",
    ],
    challenges:
      "Building a full-featured banking application without frameworks required careful planning of the application architecture. We implemented a modular structure with pure JavaScript. Another challenge was implementing secure authentication and session management without backend support.",
    image: "/projectImg/bankistscreen.png",
    images: [
      "/projectImg/bankistscreen.png",
      "https://images.unsplash.com/photo-1563013544-824ae1b704d3?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1554224155-8d04cb21cd6c?auto=format&fit=crop&w=800",
    ],
    tech: ["JavaScript", "HTML5", "CSS3", "LocalStorage"],
    github: "https://github.com/birkan-dogan/vanilla-bankist",
    live: "https://birkan-dogan.github.io/vanilla-bankist/",
    slug: "bankist-app",
  },
  {
    title: "IOS Calculator",
    description: "A pixel-perfect iOS calculator clone.",
    longDescription:
      "IOS Calculator is a pixel-perfect recreation of the iOS calculator interface. Built with vanilla JavaScript, HTML, and CSS, it replicates the look, feel, and functionality of Apple's calculator app.\n\nThe application features all standard calculator operations including basic arithmetic, percentage calculations, and positive/negative toggling. Special attention was paid to replicating the exact visual design, animations, and button interactions of the original iOS calculator.",
    features: [
      "All basic arithmetic operations",
      "Percentage calculations",
      "Positive/negative toggle",
      "Pixel-perfect iOS design",
      "Smooth button animations",
      "Responsive layout",
      "Keyboard support",
    ],
    challenges:
      "Achieving pixel-perfect accuracy in replicating the iOS design required meticulous attention to detail. We carefully measured and matched colors, fonts, spacing, and animations. Another challenge was implementing the calculator logic to handle edge cases and maintain accuracy.",
    image: "/projectImg/ios.jpg",
    images: [
      "/projectImg/ios.jpg",
      "https://images.unsplash.com/photo-1611532736579-6b16e2b50449?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1587145820266-a5951ee6f620?auto=format&fit=crop&w=800",
    ],
    tech: ["JavaScript", "HTML5", "CSS3"],
    github: "https://github.com/birkan-dogan/iosCalculator",
    live: "https://birkan-dogan.github.io/iosCalculator/",
    slug: "ios-calculator",
  },
  {
    title: "Image Editor",
    description: "A web-based image editing tool with filters and effects.",
    longDescription:
      "Image Editor is a comprehensive web-based image editing tool that allows users to apply various filters, adjustments, and effects to their images. Built entirely with vanilla JavaScript and the Canvas API, it provides a range of editing capabilities directly in the browser.\n\nThe application supports image upload, various filter effects (brightness, contrast, saturation, blur, etc.), rotation, and cropping. Users can preview changes in real-time and download the edited images. The interface is intuitive and responsive, making image editing accessible to everyone.",
    features: [
      "Image upload and preview",
      "Multiple filter effects",
      "Brightness and contrast adjustment",
      "Saturation and hue controls",
      "Image rotation and flip",
      "Crop functionality",
      "Download edited images",
    ],
    challenges:
      "Working with the Canvas API to implement various image filters efficiently was challenging. We optimized pixel manipulation algorithms for better performance. Another challenge was creating an intuitive UI that didn't overwhelm users with too many options while still providing powerful editing capabilities.",
    image: "/projectImg/imageEditor.png",
    images: [
      "/projectImg/imageEditor.png",
      "https://images.unsplash.com/photo-1609921212029-bb5a28e60960?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1572044162444-ad60f128bdea?auto=format&fit=crop&w=800",
    ],
    tech: ["JavaScript", "Canvas API", "HTML5", "CSS3"],
    github: "https://github.com/birkan-dogan/imageEditor",
    live: "https://birkan-dogan.github.io/imageEditor/",
    slug: "image-editor",
  },
  {
    title: "QR Code Generator",
    description: "A simple QR code generator for URLs and text.",
    longDescription:
      "QR Code Generator is a straightforward web application that allows users to generate QR codes for URLs, text, and other data types. The application provides instant QR code generation with customizable options.\n\nUsers can input any text or URL, and the application generates a scannable QR code that can be downloaded as an image. The tool is perfect for creating QR codes for business cards, websites, Wi-Fi passwords, and more. The interface is clean and user-friendly, making QR code generation quick and easy.",
    features: [
      "Generate QR codes for text and URLs",
      "Instant QR code preview",
      "Downloadable QR codes",
      "Clean and simple interface",
      "Responsive design",
      "Multiple size options",
      "Error correction levels",
    ],
    challenges:
      "Implementing QR code generation with proper error correction and ensuring the codes were scannable across different devices was the main challenge. We used a reliable QR code library and tested extensively. Another challenge was optimizing the download functionality to work across different browsers.",
    image: "/projectImg/qrcodegenerator.png",
    images: [
      "/projectImg/qrcodegenerator.png",
      "https://images.unsplash.com/photo-1617802690992-15d93263d3a9?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1609239062038-9c2e23f2f14e?auto=format&fit=crop&w=800",
    ],
    tech: ["JavaScript", "QR Code Library", "HTML5", "CSS3"],
    github: "https://github.com/birkan-dogan/QR-code-Generator",
    live: "https://birkan-dogan.github.io/QR-code-Generator/",
    slug: "qr-code-generator",
  },
  {
    title: "ToDo List",
    description: "A feature-rich todo list application with local storage.",
    longDescription:
      "ToDo List is a comprehensive task management application that helps users organize their daily tasks efficiently. Built with vanilla JavaScript, it features a clean interface with powerful task management capabilities.\n\nThe application allows users to add, edit, delete, and mark tasks as complete. Tasks are automatically saved to local storage, ensuring data persistence across sessions. Users can filter tasks by status, sort by priority, and organize tasks with categories. The responsive design ensures the app works seamlessly on all devices.",
    features: [
      "Add, edit, and delete tasks",
      "Mark tasks as complete",
      "Task filtering and sorting",
      "Local storage persistence",
      "Task categories",
      "Due date functionality",
      "Responsive design",
    ],
    challenges:
      "Implementing efficient local storage management while maintaining good performance was crucial. We optimized data serialization and implemented debounced saves. Another challenge was creating an intuitive UI for task management that didn't feel cluttered despite the many features.",
    image: "/projectImg/toDoList.jpg",
    images: [
      "/projectImg/toDoList.jpg",
      "https://images.unsplash.com/photo-1515377905703-c4788e51af15?auto=format&fit=crop&w=800",
      "https://images.unsplash.com/photo-1504384308090-c894fdcc538d?auto=format&fit=crop&w=800",
    ],
    tech: ["JavaScript", "HTML5", "CSS3", "LocalStorage"],
    github: "https://github.com/birkan-dogan/toDoList",
    live: "https://birkan-dogan.github.io/toDoList/",
    slug: "to-do-list",
  },
];
